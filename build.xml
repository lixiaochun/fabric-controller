<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE project>
<project basedir="." default="release" name="FabricController">
  <property environment="env" />
  <property name="debuglevel" value="source,lines,vars" />
  <property name="target" value="1.8" />
  <property name="source" value="1.8" />

  <path id="FC-lib.classpath">
    <fileset dir="lib">
      <include name="**/*.jar" />
    </fileset>
  </path>

  <pathconvert property="FC-lib.manifest" refid="FC-lib.classpath" dirsep="/" pathsep=" ">
    <map from="${basedir}${file.separator}lib${file.separator}" to="" />
  </pathconvert>

  <target name="clean">
    <delete dir="classes" />
    <delete file="./lib/${ant.project.name}.jar" />
  </target>

  <target depends="clean" name="init">
    <mkdir dir="classes" />
    <copy includeemptydirs="false" todir="classes">
      <fileset dir="src">
        <exclude name="**/*.launch" />
        <exclude name="**/*.java" />
      </fileset>
    </copy>
  </target>

  <tstamp>
    <format property="now.time" pattern="yyyyMMddHHmmss" />
  </tstamp>

  <target depends="init" name="build">
    <echo message="${ant.project.name}: ${ant.file}" />
    <javac  encoding="utf-8" debug="true" debuglevel="${debuglevel}" destdir="classes" includeantruntime="false" source="${source}" target="${target}">
      <src path="src" />
      <classpath refid="FC-lib.classpath" />
    </javac>
    <jar destfile="./lib/${ant.project.name}.jar">
      <manifest>
        <attribute name="Main-Class" value="msf.fc.FabricController" />
        <attribute name="Class-Path" value=". ../conf/ ${FC-lib.manifest}" />
      	<attribute name="Timestamp" value="${now.time}" />
      </manifest>
      <fileset dir="classes">
        <include name="**/*.class" />
        <include name="**/*.xsd" />
        <include name="META-INF/*" />
      </fileset>
    </jar>
  </target>

	<target name="makeExtensionsConfig" depends="build">
		<delete file="./conf/services/sys/fc_extensions.cnf"/>
		<delete dir="./conf/services/sys"/>
		<mkdir dir="./conf/services"/>
		<mkdir dir="./conf/services/sys"/>
		<mkdir dir="./.work" />
		<exec executable="jar" output="./.work/${ant.project.name}.txt" >
			<arg line="-tf ./lib/${ant.project.name}.jar"/>
		</exec>
		<copy file="./.work/${ant.project.name}.txt" tofile="./.work/${ant.project.name}_extensions.txt">
			<filterchain>
				<linecontainsregexp>
					<regexp pattern="^.*\/fc\/services\/.*\/.*Manager\.class"/>
				</linecontainsregexp>
			</filterchain>
		</copy>
		<replace file="./.work/${ant.project.name}_extensions.txt">
			<replacefilter token="/" value="." />
			<replacefilter token=".class" value="" />
		</replace>
		<copy file="./.work/${ant.project.name}_extensions.txt" tofile="./.work/${ant.project.name}_extensions2.txt" overwrite="true">
			<filterchain>
				<tokenfilter>
			    	<ignoreblank/>
				</tokenfilter>
			</filterchain>
		</copy>
		<copy file="./.work/${ant.project.name}_extensions2.txt" tofile="./.work/${ant.project.name}_extensions.txt" overwrite="true" />

		<length file="./.work/${ant.project.name}_extensions.txt" property="extensions.len"/>
		<condition property="isExtensions">
			<not>
				<equals arg1="0" arg2="${extensions.len}" />
			</not>
		</condition>
		<antcall target = "extensionFunctionAndUp"/>
		<antcall target = "extensionFunctionZero"/>
		<delete dir="./.work"/>
	</target>

	<target name="extensionFunctionAndUp" if="isExtensions" >
		<copy file="./fc_extensionsbase.txt" tofile="./.work/${ant.project.name}_unmatch.txt" overwrite="true" />
		<replace file="./.work/${ant.project.name}_unmatch.txt"
			replacefilterfile="./.work/${ant.project.name}_extensions.txt" >
		</replace>
		<copy file="./.work/${ant.project.name}_unmatch.txt" tofile="./.work/${ant.project.name}_unmatch2.txt" overwrite="true">
			<filterchain>
				<tokenfilter>
			    	<ignoreblank/>
				</tokenfilter>
			</filterchain>
		</copy>
		<copy file="./.work/${ant.project.name}_unmatch2.txt" tofile="./.work/${ant.project.name}_unmatch.txt" overwrite="true" />
		<length file="./.work/${ant.project.name}_unmatch.txt" property="unmatch.len" length="0" when="ne" />
		<condition property="isUnmatch">
			<not>
				<equals arg1="0" arg2="${unmatch.len}" />
			</not>
		</condition>
		<antcall target = "noneExtensionFunctionAndUp"/>
		<antcall target = "noneExtensionFunctionZero"/>
	</target>

	<target name="extensionFunctionZero" unless="isExtensions" >
		<copy file="./.work/${ant.project.name}_extensions.txt" tofile="./conf/services/sys/fc_extensions.cnf" overwrite="true" />
	</target>

	<target name="noneExtensionFunctionAndUp" if="isUnmatch" >
		<copy file="./fc_extensionsbase.txt" tofile="./.work/${ant.project.name}_match.txt" overwrite="true" />
		<replace file="./.work/${ant.project.name}_match.txt"
			replacefilterfile="./.work/${ant.project.name}_unmatch.txt" />
		<copy file="./.work/${ant.project.name}_match.txt" tofile="./conf/services/sys/fc_extensions.cnf" overwrite="true">
			<filterchain>
				<tokenfilter>
			    	<ignoreblank/>
				</tokenfilter>
			</filterchain>
		</copy>
	</target>

	<target name="noneExtensionFunctionZero" unless="isUnmatch" >
		<copy file="./fc_extensionsbase.txt" tofile="./conf/services/sys/fc_extensions.cnf" overwrite="true" />
	</target>

  <target description="make release file." depends="makeExtensionsConfig" name="release">
	<mkdir dir="./.work" />
  	<copy file="./conf/fc_log4j2.xml" tofile="./.work/fc_log4j2.xml" overwrite="true" />
	<copy file="./conf/services/sys/fc_extensions.cnf" tofile="./.work/checkData.txt" overwrite="true" />
	<replace file="./.work/checkData.txt"
		token="msf.fc.services.ctrlstsnotify.FcCtrlStsNotifyManager" value="" >
	</replace>
  	<length file="./conf/services/sys/fc_extensions.cnf" property="fc_extensions.len" />
  	<length file="./.work/checkData.txt" property="checkData.len" />
	<condition property="isFcCtrlStsNotifyManager" >
		<equals arg1="${fc_extensions.len}" arg2="${checkData.len}" />
	</condition>
	<antcall target = "checkFcCtrlStsNotifyManager" />

  	<tar destfile="release/${ant.project.name}_${now.time}.tar">
      <tarfileset dir="./lib" includes="**/*" prefix="lib" />
      <tarfileset dir="./script/program" includes="**/*" prefix="bin" />
      <tarfileset dir="./conf" includes="**/*" prefix="conf" />
      <tarfileset dir="./sql" includes="**/*" prefix="sql" />
    </tar>
    <gzip src="release/${ant.project.name}_${now.time}.tar" destfile="release/${ant.project.name}_${now.time}.tar.gz" />
    <delete file="release/${ant.project.name}_${now.time}.tar" />
  	<copy file="./.work/fc_log4j2.xml" tofile="./conf/fc_log4j2.xml" overwrite="true" />
  	<delete dir="./.work"/>

  </target>

  <path id="xpath.classpath">
	<pathelement location="script/mainte/services/renewal/java/bin" />
  </path>

  <target name="xpathClean">
  	<delete dir="script/mainte/services/renewal/java/bin" />
  </target>

  <target name="xpathBuild">
  	<mkdir dir="script/mainte/services/renewal/java/bin" />
	<javac debug="true" debuglevel="${debuglevel}" destdir="script/mainte/services/renewal/java/bin" includeantruntime="false" source="${source}" target="${target}">
	  <src path="script/mainte/services/renewal/java/src" />
	  <classpath refid="xpath.classpath" />
	</javac>
  </target>

  <target name="xpathJar" depends="xpathClean,xpathBuild">
	<jar destfile="script/mainte/services/renewal/lib/xpath.jar">
	  <manifest>
	  <attribute name="Main-Class" value="xpath.XPath" />
	  </manifest>
	  <fileset dir="script/mainte/services/renewal/java/bin" />
	</jar>
  </target>

  <target name="checkFcCtrlStsNotifyManager" if="isFcCtrlStsNotifyManager" >
    <replace file="./conf/fc_log4j2.xml">
      <replacefilter token="&lt;Configuration status=&quot;off&quot; shutdownHook=&quot;disable&quot; packages=&quot;msf.fc.services.ctrlstsnotify&quot; &gt;" value="&lt;Configuration status=&quot;off&quot; shutdownHook=&quot;disable&quot; &gt;" />
      <replacefilter token="    &lt;FcNotify name=&quot;FcNotify&quot;&gt;&#x0A;      &lt;PatternLayout pattern=&quot;${logFormat}&quot; /&gt;&#x0A;    &lt;/FcNotify&gt;&#x0A;" value="" />
      <replacefilter token="    &lt;Async name=&quot;Async&quot; includeLocation=&quot;true&quot;&gt;&#x0A;      &lt;AppenderRef ref=&quot;FcNotify&quot; /&gt;&#x0A;    &lt;/Async&gt;&#x0A;" value="" />
      <replacefilter token="      &lt;AppenderRef ref=&quot;Async&quot; level=&quot;${notifyLogLevel}&quot; /&gt;&#x0A;" value="" />
    </replace>
  </target>

</project>
