{
    "Login": {
        "Username": "Username",
        "Password": "Password",
        "Login": "Login",
        "LoginError": "Username or password is incorrect."
    },
    "Main": {
        "debugPanel": {
            "informationTitle": "Information",
            "informationMessage": "This is sample message panel.",
            "informationClose": "OK"
        },
        "restCommonPanel": {
            "panelAlert": "This is test message.<br>When deploy action failed show some message here.",
            "deployButton": "deploy",
            "restCommonCancel": "cancel",
            "rollbackOption": "rollback",
            "restCommonProcessing": "Controller is processing ...",
            "menubarCommonOk": "OK"
        },
        "modelInfoSelectPanel": {
            "title": "Select Device",
            "capabilitySelectSection": "Select capability conditions.",
            "vpnType":   "VPN Type :",
            "vpnTypeL2": "L2VPN",
            "vpnTypeL3": "L3VPN",
            "portSpeed": "Port Speed :",
            "deviceSearchAlert": "This is test message.<br>When deploy action failed show some message here.",
            "deviceSearch": "device search",
            "selectModel": "Select device.",
            "modelSelectAlert": "This is test message.<br>When deploy action failed show some message here.",
            "modelSelectBack": "&lt;&lt; back",
            "modelSelect": "select"
        },
        "addModelInfoSelectPanel": {
            "title": "Device Info Add",
            "addModelAlert": "This is test message.<br>When deploy action failed show some message here.",
            "addModelDeploy": "deploy",
            "addModelCancel": "cancel",
            "processingMessage": "Controller is processing ..."
        },
        "sliceSelectPanel": {
            "title": "Select Slice Type",
            "selectSliceType": "Select slice type.",
            "sliceType":   "Slice Type :",
            "sliceTypeL2": "L2 Slice",
            "sliceTypeL3": "L3 Slice",
            "selectSlice": "select"
        },
        "cpCreateOptionPanel": {
            "title": "Create CP Option",
            "cpOption": "Specify create CP option.",
            "cpSliceType": "Slice Type :",
            "cpSliceL2": "L2 Slice",
            "cpSliceL3": "L3 Slice",
            "cpSliceId": "Slice ID :",
            "cpSliceIdPH": "Slice ID",
            "supportProtocol": "Support Protocol :",
            "cpProtocolBGP": "BGP",
            "cpProtocolStaticRoute": "Static Route",
            "cpProtocolVRRP": "VRRP",
            "setCPOption": "select"
        },
        "ifTypeSelectPanel": {
            "title": "Select IF Type",
            "ifSelectSection": "Select IF type.",
            "ifTypeTitle": "IF Type :",
            "physicalIF": "physical_IF",
            "breakoutIF": "breakout_IF",
            "lagIF": "lag_IF",
            "select": "select"
        },
        "menu": {
            "Monitoring": "Monitoring",
            "showTraffic": "Show Traffic",
            "controllerInfo": "Controller Info",

            "Service": "Service",
            "sliceControl": "Slice",
            "sliceControlCreate": "add",
            "sliceControlModify": "modify",
            "sliceControlDelete": "delete",
            "cpControl": "CP",
            "cpControlCreate": "add",
            "cpControlModify": "modify",
            "cpControlDelete": "delete",

            "Infrastructure": "Infrastructure",
            "cluster": "Cluster",
            "clusterAdd": "add",
            "clusterDelete": "delete",
            "clusterAddLink": "add link",
            "clusterDeleteLink": "delete link",
            "device": "Device",
            "deviceAdd": "add",
            "deviceDelete": "delete",
            "leaf": "Leaf",
            "leafAdd": "add",
            "leafDelete": "delete",
            "leafModify": "modify",
            "spine": "Spine",
            "spineAdd": "add",
            "spineDelete": "delete",
            "interface": "Interface",
            "physicalIF": "Physical IF",
            "physicalIFModify": "modify",
            "breakoutIF": "BreakoutIF",
            "breakoutIFAdd": "add",
            "breakoutIFDelete": "delete",
            "lagIF": "Lag IF",
            "lagIFAdd": "add",
            "lagIFDelete": "delete",
            "edgePoint": "Edge Point",
            "edgePointAdd": "add",
            "edgePointDelete": "delete"
        },
        "header": {
            "networkMode": "Network Mode",
            "controllerMode": "Controller Mode",
            "logout": "Logout",
            "login": "Login:"
        },
        "menuBar": {
            "map": "Map",
            "cluster": "Cluster",
            "equipment": "Equipment",
            "l2slice": "L2 Slice",
            "l3slice": "L3 Slice",
            "selectMsg": "Selectable Max"
        },
        "body": {
            "controllerStatusMsg": "Controller unresponsive. It seems controller is switching..."
        },
        "detail": {
            "filter1": "Cluster",
            "filter2": "Empty",
            "filter3": "Physical",
            "filter4": "Logical",
            "filter5": "Link",
            "filter6": "Slice",
            "filter7": "Platform",
            "filter8": "Traffic",
            "filter9": "Failure",
            "filter10": "Controller",

            "filter1detail": "Cluster info",
            "filter1c1": "cluster id",
            "filter1c2": "as number",
            "filter1c3": "L2 enable",
            "filter1c4": "L3 support",

            "filter2detail": "Empty resources",
            "filter2c1": "cluster id",
            "filter2c2": "node id",
            "filter2c3": "if id",
            "filter2c4": "if slot",

            "filter3_1detail": "Physical IF info",
            "filter3_1c1": "cluster id",
            "filter3_1c2": "node id",
            "filter3_1c3": "if id",
            "filter3_1c4": "if slot",
            "filter3_1c5": "remark capability",
            "filter3_1c6": "shaping capability",
            "filter3_1c7": "egress queue capability",
            "filter3_1c8": "uses",

            "filter3_2detail": "Breakout IF info",
            "filter3_2c1": "cluster id",
            "filter3_2c2": "node id",
            "filter3_2c3": "if id",
            "filter3_2c4": "if name",
            "filter3_2c5": "speed",
            "filter3_2c6": "remark capability",
            "filter3_2c7": "shaping capability",
            "filter3_2c8": "egress queue capability",
            "filter3_2c9": "uses",

            "filter3_3detail": "Lag IF info",
            "filter3_3c1": "cluster id",
            "filter3_3c2": "node id",
            "filter3_3c3": "if id",
            "filter3_3c4": "if name",
            "filter3_3c5": "speed",
            "filter3_3c6": "min links",
            "filter3_3c7": "member",
            "filter3_3c8": "remark capability",
            "filter3_3c9": "shaping capability",
            "filter3_3c10": "egress queue capability",
            "filter3_3c11": "uses",

            "filter4detail": "Logical port info",
            "filter4c1": "cluster id",
            "filter4c2": "node id",
            "filter4c3": "if id",
            "filter4c4": "edge point id",
            "filter4c5": "remark capability",
            "filter4c6": "shaping capability",
            "filter4c7": "egress queue capability",

            "filter5_1detail": "Inter-Cluster Link info",
            "filter5_1c1": "cluster id",
            "filter5_1c2": "node id",
            "filter5_1c3": "link id",
            "filter5_1c4": "if id",
            "filter5_1c5": "igp cost",
            "filter5_1c6": "ipv4 addr",
            "filter5_1c7": "threshold",

            "filter5_2detail": "Intra-Cluster Link info",
            "filter5_2c1": "cluster id",
            "filter5_2c2": "node id",
            "filter5_2c3": "link if id",
            "filter5_2c4": "if id",
            "filter5_2c5": "opposite node id",
            "filter5_2c6": "opposite if id",
            "filter5_2c7": "ipv4 addr",
            "filter5_2c8": "threshold",

            "filter6_1detail": "L2 Slice info",
            "filter6_1c1": "slice id",
            "filter6_1c2": "edge point id",
            "filter6_1c3": "cp id",
            "filter6_1c4": "vlan id",
            "filter6_1c5": "port mode",
            "filter6_1c6": "remark menu",
            "filter6_1c7": "ingress shaping",
            "filter6_1c8": "egress shaping",
            "filter6_1c9": "egress queue",
            "filter6_1c10": "pair cp id",

            "filter6_2detail": "L3 Slice info",
            "filter6_2c1": "slice id",
            "filter6_2c2": "edge point id",
            "filter6_2c3": "cp id",
            "filter6_2c4": "vlan id",
            "filter6_2c5": "ipv4 addr",
            "filter6_2c6": "ipv4 prefix",
            "filter6_2c7": "ipv6 addr",
            "filter6_2c8": "ipv6 prefix",
            "filter6_2c9": "support protocols",
            "filter6_2c10": "bgp",
            "filter6_2c11": "static route",
            "filter6_2c12": "vrrp",
            "filter6_2c13": "remark menu",
            "filter6_2c14": "ingress shaping",
            "filter6_2c15": "engress shaping",
            "filter6_2c16": "engress queue",
            "filter6_2c17": "threshold",

            "filter7detail": "Platform info",
            "filter7c1": "cluster id",
            "filter7c2": "node id",
            "filter7c3": "platform",
            "filter7c4": "status",

            "filter8_1detail": "IF Traffic info",
            "filter8_1c1": "cluster id",
            "filter8_1c2": "node id",
            "filter8_1c3": "if type",
            "filter8_1c4": "if id",
            "filter8_1c5": "send",
            "filter8_1c6": "receive",

            "filter8_2detail": "CP Traffic info",
            "filter8_2c1": "slice id",
            "filter8_2c2": "cp id",
            "filter8_2c3": "send",
            "filter8_2c4": "receive",

            "filter9_1detail": "Node Failure info",
            "filter9_1c1": "cluster id",
            "filter9_1c2": "node id",
            "filter9_1c3": "status",

            "filter9_2detail": "IF Failure info",
            "filter9_2c1": "cluster id",
            "filter9_2c2": "node id",
            "filter9_2c3": "if id",
            "filter9_2c4": "status",

            "filter9_3detail": "Slice Failure info",
            "filter9_3c1": "slice id",
            "filter9_3c2": "status",
            "filter9_3c3": "cp id(1)",
            "filter9_3c4": "cp id(2)",
            "filter9_3c5": "reachable",

            "filter10detail": "Controller info",
            "filter10c1": "id",
            "filter10c2": "cpu(%)",
            "filter10c3": "mem(KB)",
            "filter10c4": "disk(KB)"
        },
        "errMessage": {
            "Attention": "Attention!!",
            "Failure": "Failure occurred!!<br>",
            "SliceUnit": "SliceUnit",
            "PhysicalUnit": "PhysicalUnit",
            "AndMore": "and more...",
            "UsageRate": "Usage rate exceeded!!<br>&nbsp;&nbsp;",
            "UsageDetail": "The CPU usage rate of the Controller &quot;%s&quot; exceeded %s%%.<br>"
        }
    },
    "Form": {
        "pmtitle": {
            "P010101": "Device Info Add",
            "P010104": "Device Info Delete",
            "P010201": "SW Cluster Add",
            "P010204": "SW Cluster Delete",
            "P010401": "Leaf Add",
            "P010404": "Leaf Delete",
            "P010405": "Leaf Modify",
            "P010501": "Spine Add",
            "P010504": "Spine Delete",
            "P010803": "physicalIF Modify",
            "P010901_add": "Breakout IFs Add",
            "P010901_delete": "Breakout IFs Delete",
            "P011101": "LagIF Add",
            "P011105": "LagIF Delete",
            "P011201": "Inter-Cluster Link Add",
            "P011204": "Inter-Cluster Link Delete",
            "P011401": "Edge-Point Add",
            "P011404": "Edge-Point Delete",
            "P020101": "Slice Add",
            "P020102": "Slice Modify",
            "P020103": "Slice Delete",
            "P020201_add": "CP Add",
            "P020203": "CP Modify",
            "P020201_delete": "CP Delete"
        }
    },
    "Params": {
        "P010101": {
            "equipment_type": "equipment_type",
            "equipment_type_id": "equipment_type_id",
            "platform": "platform",
            "os": "os",
            "firmware": "firmware",
            "router_type": "router_type",
            "physical_if_name_syntax": "physical_if_name_syntax",
            "breakout_if_name_syntax": "breakout_if_name_syntax",
            "breakout_if_name_suffix_list": "breakout_if_name_suffix_list",
            "capability": "capability",
            "vpn": "vpn",
            "l2": "l2",
            "l3": "l3",
            "qos": "qos",
            "remark": "remark",
            "remark_capability": "remark_capability",
            "remark_default": "remark_default",
            "shaping": "shaping",
            "egress_queue_capability": "egress_queue_capability",
            "egress_queue_default": "egress_queue_default",
            "dhcp": "dhcp",
            "dhcp_template": "dhcp_template",
            "config_template": "config_template",
            "initial_config": "initial_config",
            "snmp": "snmp",
            "if_name_oid": "if_name_oid",
            "snmptrap_if_name_oid": "snmptrap_if_name_oid",
            "max_repetitions": "max_repetitions",
            "boot_complete_msg": "boot_complete_msg",
            "boot_error_msgs": "boot_error_msgs",
            "if_definitions": "if_definitions",
            "ports": "ports",
            "speed": "speed",
            "port_prefix": "port_prefix",
            "lag_prefix": "lag_prefix",
            "unit_connector": "unit_connector",
            "slots": "slots",
            "if_id": "if_id",
            "if_slot": "if_slot",
            "speed_capabilities": "speed_capabilities"
        },
        "P010104": {
            "equipment_type_id": "equipment_type_id"
        },
        "P010201": {
            "cluster": "cluster",
            "cluster_id": "cluster_id"
        },
        "P010204": {
            "cluster_id": "cluster_id"
        },
        "P010401": {
            "cluster_id": "cluster_id",
            "node_id": "node_id",
            "equipment_type_id": "equipment_type_id",
            "leaf_type": "leaf_type",
            "BL": "BL",
            "EL": "EL",
            "IL": "IL",
            "host_name": "host_name",
            "mac_address": "mac_address",
            "username": "username",
            "password": "password",
            "provisioning": "provisioning",
            "vpn_type": "vpn_type",
            "plane": "plane",
            "snmp_community": "snmp_community",
            "ntp_server_address": "ntp_server_address",

            "breakout": "breakout",
            "breakout_local": "local",
            "breakout_local_breakout_ifs": "breakout_ifs",
            "breakout_local_breakout_ifs_breakout_if_ids": "breakout_if_ids",
            "breakout_local_breakout_ifs_breakout_if_id": "breakout_if_id",
            "breakout_local_breakout_ifs_base_if": "base_if",
            "breakout_local_breakout_ifs_base_if_physical_if_id": "physical_if_id",
            "breakout_local_breakout_ifs_division_number": "division_number",
            "breakout_local_breakout_ifs_breakout_if_speed": "breakout_if_speed",
            "breakout_opposite": "opposite",
            "breakout_opposite_opposite_node_id": "opposite_node_id",
            "breakout_opposite_breakout_ifs": "breakout_ifs",
            "breakout_opposite_breakout_ifs_breakout_if_ids": "breakout_if_ids",
            "breakout_opposite_breakout_ifs_breakout_if_id": "breakout_if_id",
            "breakout_opposite_breakout_ifs_base_if": "base_if",
            "breakout_opposite_breakout_ifs_base_if_physical_if_id": "physical_if_id",
            "breakout_opposite_breakout_ifs_division_number": "division_number",
            "breakout_opposite_breakout_ifs_breakout_if_speed": "breakout_if_speed",

            "internal_links": "internal_links",
            "internal_links_physical_links": "physical_links",
            "internal_links_physical_links_opposite_node_id": "opposite_node_id",
            "internal_links_physical_links_local_traffic_threshold": "local_traffic_threshold",
            "internal_links_physical_links_opposite_traffic_threshold": "opposite_traffic_threshold",
            "internal_links_physical_links_internal_link_if": "internal_link_if",
            "internal_links_physical_links_internal_link_if_local": "local",
            "internal_links_physical_links_internal_link_if_local_physical_if": "physical_if",
            "internal_links_physical_links_internal_link_if_local_physical_if_physical_if_id": "physical_if_id",
            "internal_links_physical_links_internal_link_if_local_physical_if_physical_if_speed": "physical_if_speed",
            "internal_links_physical_links_internal_link_if_local_breakout_if": "breakout_if",
            "internal_links_physical_links_internal_link_if_local_breakout_if_breakout_if_id": "breakout_if_id",
            "internal_links_physical_links_internal_link_if_opposite": "opposite",
            "internal_links_physical_links_internal_link_if_opposite_physical_if": "physical_if",
            "internal_links_physical_links_internal_link_if_opposite_physical_if_physical_if_id": "physical_if_id",
            "internal_links_physical_links_internal_link_if_opposite_physical_if_physical_if_speed": "physical_if_speed",
            "internal_links_physical_links_internal_link_if_opposite_breakout_if": "breakout_if",
            "internal_links_physical_links_internal_link_if_opposite_breakout_if_breakout_if_id": "breakout_if_id",

            "internal_links_lag_links": "lag_links",
            "internal_links_lag_links_opposite_node_id": "opposite_node_id",
            "internal_links_lag_links_local_traffic_threshold": "local_traffic_threshold",
            "internal_links_lag_links_opposite_traffic_threshold": "opposite_traffic_threshold",
            "internal_links_lag_links_member_ifs": "member_ifs",
            "internal_links_lag_links_member_ifs_local": "local",
            "internal_links_lag_links_member_ifs_local_physical_if": "physical_if",
            "internal_links_lag_links_member_ifs_local_physical_if_physical_if_id": "physical_if_id",
            "internal_links_lag_links_member_ifs_local_physical_if_physical_if_speed": "physical_if_speed",
            "internal_links_lag_links_member_ifs_local_breakout_if": "breakout_if",
            "internal_links_lag_links_member_ifs_local_breakout_if_breakout_if_id": "breakout_if_id",
            "internal_links_lag_links_member_ifs_opposite": "opposite",
            "internal_links_lag_links_member_ifs_opposite_physical_if": "physical_if",
            "internal_links_lag_links_member_ifs_opposite_physical_if_physical_if_id": "physical_if_id",
            "internal_links_lag_links_member_ifs_opposite_physical_if_physical_if_speed": "physical_if_speed",
            "internal_links_lag_links_member_ifs_opposite_breakout_if": "breakout_if",
            "internal_links_lag_links_member_ifs_opposite_breakout_if_breakout_if_id": "breakout_if_id",

            "management_if_address": "management_if_address",
            "management_if_prefix": "management_if_prefix"
        },
        "P010404": {
            "cluster_id": "cluster_id",
            "node_id": "node_id"
        },
        "P010405": {
            "cluster_id": "cluster_id",
            "node_id": "node_id",
            "action": "action",
            "leaf_type_option": "leaf_type_option",
            "leaf_type": "leaf_type"
        },
        "P010501": {
            "cluster_id": "cluster_id",
            "node_id": "node_id",
            "equipment_type_id": "equipment_type_id",
            "host_name": "host_name",
            "mac_address": "mac_address",
            "username": "username",
            "password": "password",
            "provisioning": "provisioning",
            "snmp_community": "snmp_community",
            "ntp_server_address": "ntp_server_address",

            "breakout": "breakout",
            "breakout_local": "local",
            "breakout_local_breakout_ifs": "breakout_ifs",
            "breakout_local_breakout_ifs_breakout_if_ids": "breakout_if_ids",
            "breakout_local_breakout_ifs_breakout_if_id": "breakout_if_id",
            "breakout_local_breakout_ifs_base_if": "base_if",
            "breakout_local_breakout_ifs_base_if_physical_if_id": "physical_if_id",
            "breakout_local_breakout_ifs_division_number": "division_number",
            "breakout_local_breakout_ifs_breakout_if_speed": "breakout_if_speed",
            "breakout_opposite": "opposite",
            "breakout_opposite_opposite_node_id": "opposite_node_id",
            "breakout_opposite_breakout_ifs": "breakout_ifs",
            "breakout_opposite_breakout_ifs_breakout_if_ids": "breakout_if_ids",
            "breakout_opposite_breakout_ifs_breakout_if_id": "breakout_if_id",
            "breakout_opposite_breakout_ifs_base_if": "base_if",
            "breakout_opposite_breakout_ifs_base_if_physical_if_id": "physical_if_id",
            "breakout_opposite_breakout_ifs_division_number": "division_number",
            "breakout_opposite_breakout_ifs_breakout_if_speed": "breakout_if_speed",

            "internal_links": "internal_links",
            "internal_links_physical_links": "physical_links",
            "internal_links_physical_links_opposite_node_id": "opposite_node_id",
            "internal_links_physical_links_local_traffic_threshold": "local_traffic_threshold",
            "internal_links_physical_links_opposite_traffic_threshold": "opposite_traffic_threshold",
            "internal_links_physical_links_internal_link_if": "internal_link_if",
            "internal_links_physical_links_internal_link_if_local": "local",
            "internal_links_physical_links_internal_link_if_local_physical_if": "physical_if",
            "internal_links_physical_links_internal_link_if_local_physical_if_physical_if_id": "physical_if_id",
            "internal_links_physical_links_internal_link_if_local_physical_if_physical_if_speed": "physical_if_speed",
            "internal_links_physical_links_internal_link_if_local_breakout_if": "breakout_if",
            "internal_links_physical_links_internal_link_if_local_breakout_if_breakout_if_id": "breakout_if_id",
            "internal_links_physical_links_internal_link_if_opposite": "opposite",
            "internal_links_physical_links_internal_link_if_opposite_physical_if": "physical_if",
            "internal_links_physical_links_internal_link_if_opposite_physical_if_physical_if_id": "physical_if_id",
            "internal_links_physical_links_internal_link_if_opposite_physical_if_physical_if_speed": "physical_if_speed",
            "internal_links_physical_links_internal_link_if_opposite_breakout_if": "breakout_if",
            "internal_links_physical_links_internal_link_if_opposite_breakout_if_breakout_if_id": "breakout_if_id",

            "internal_links_lag_links": "lag_links",
            "internal_links_lag_links_opposite_node_id": "opposite_node_id",
            "internal_links_lag_links_local_traffic_threshold": "local_traffic_threshold",
            "internal_links_lag_links_opposite_traffic_threshold": "opposite_traffic_threshold",
            "internal_links_lag_links_member_ifs": "member_ifs",
            "internal_links_lag_links_member_ifs_local": "local",
            "internal_links_lag_links_member_ifs_local_physical_if": "physical_if",
            "internal_links_lag_links_member_ifs_local_physical_if_physical_if_id": "physical_if_id",
            "internal_links_lag_links_member_ifs_local_physical_if_physical_if_speed": "physical_if_speed",
            "internal_links_lag_links_member_ifs_local_breakout_if": "breakout_if",
            "internal_links_lag_links_member_ifs_local_breakout_if_breakout_if_id": "breakout_if_id",
            "internal_links_lag_links_member_ifs_opposite": "opposite",
            "internal_links_lag_links_member_ifs_opposite_physical_if": "physical_if",
            "internal_links_lag_links_member_ifs_opposite_physical_if_physical_if_id": "physical_if_id",
            "internal_links_lag_links_member_ifs_opposite_physical_if_physical_if_speed": "physical_if_speed",
            "internal_links_lag_links_member_ifs_opposite_breakout_if": "breakout_if",
            "internal_links_lag_links_member_ifs_opposite_breakout_if_breakout_if_id": "breakout_if_id",
            "management_if_address": "management_if_address",
            "management_if_prefix": "management_if_prefix"
        },
        "P010504": {
            "cluster_id": "cluster_id",
            "node_id": "node_id"
        },
        "P010803": {
            "cluster_id": "cluster_id",
            "fabric_type": "fabric_type",
            "node_id": "node_id",
            "if_id": "if_id",
            "action": "action",
            "speed": "speed"
        },
        "P010901_add": {
            "cluster_id": "cluster_id",
            "fabric_type": "fabric_type",
            "node_id": "node_id",
            "noname": "breakout_ifs",
            "op": "op",
            "path": "path",
            "value": "value",
            "base_if": "base_if",
            "physical_if_id": "physical_if_id",
            "division_number": "division_number",
            "breakout_if_speed": "breakout_if_speed"
        },
        "P010901_delete": {
            "cluster_id": "cluster_id",
            "fabric_type": "fabric_type",
            "node_id": "node_id",
            "noname": "breakout_ifs",
            "op": "op",
            "path": "path"
        },
        "P011101": {
            "cluster_id": "cluster_id",
            "fabric_type": "fabric_type",
            "node_id": "node_id",
            "physical_if_ids": "physical_if_ids",
            "breakout_if_ids": "breakout_if_ids"
        },
        "P011105": {
            "cluster_id": "cluster_id",
            "fabric_type": "fabric_type",
            "node_id": "node_id",
            "lag_if_id": "lag_if_id"
        },
        "P011201_physicalIF": {
            "cluster_id": "cluster_id",
            "cluster_link_if_id": "cluster_link_if_id",
            "opposite_cluster_id": "opposite_cluster_id",
            "physical_link": "physical_link",
            "node_id": "node_id",
            "physical_if_id": "physical_if_id",
            "opposite_node_id": "opposite_node_id",
            "opposite_if_id": "opposite_if_id",
            "opposite_breakout_if_id": "opposite_breakout_if_id",
            "igp_cost": "igp_cost",
            "port_status": "port_status",
            "ipv4_address": "ipv4_address",
            "traffic_threshold": "traffic_threshold"
        },
        "P011201_breakoutIF": {
            "cluster_id": "cluster_id",
            "cluster_link_if_id": "cluster_link_if_id",
            "opposite_cluster_id": "opposite_cluster_id",
            "physical_link": "physical_link",
            "node_id": "node_id",
            "breakout_if_id": "breakout_if_id",
            "opposite_node_id": "opposite_node_id",
            "opposite_if_id": "opposite_if_id",
            "opposite_breakout_if_id": "opposite_breakout_if_id",
            "igp_cost": "igp_cost",
            "port_status": "port_status",
            "ipv4_address": "ipv4_address",
            "traffic_threshold": "traffic_threshold"
        },
        "P011201_lagIF": {
            "cluster_id": "cluster_id",
            "cluster_link_if_id": "cluster_link_if_id",
            "opposite_cluster_id": "opposite_cluster_id",
            "lag_link": "lag_link",
            "node_id": "node_id",
            "lag_if_id": "lag_if_id",
            "opposite_node_id": "opposite_node_id",
            "opposite_lag_if_id": "opposite_lag_if_id",
            "igp_cost": "igp_cost",
            "port_status": "port_status",
            "ipv4_address": "ipv4_address",
            "traffic_threshold": "traffic_threshold"
        },
        "P011204": {
            "cluster_id": "cluster_id",
            "cluster_link_if_id": "cluster_link_if_id"
        },
        "P011401": {
            "cluster_id": "cluster_id",
            "leaf_node_id": "leaf_node_id",
            "lag_if_id": "lag_if_id",
            "physical_if_id": "physical_if_id",
            "breakout_if_id": "breakout_if_id",
            "traffic_threshold": "traffic_threshold"
        },
        "P011404": {
            "cluster_id": "cluster_id",
            "edge_point_id": "edge_point_id"
        },
        "P020101_l2": {
            "slice_type": "slice_type",
            "slice_id": "slice_id",
            "remark_menu": "remark_menu",
            "vrf_id": "vrf_id"
        },
        "P020101_l3": {
            "slice_type": "slice_type",
            "slice_id": "slice_id",
            "plane": "plane",
            "remark_menu": "remark_menu",
            "vrf_id": "vrf_id"
        },
        "P020102": {
            "slice_type": "slice_type",
            "slice_id": "slice_id",
            "action": "action",
            "remark_menu": "remark_menu"
        },
        "P020103": {
            "slice_type": "slice_type",
            "slice_id": "slice_id"
        },
        "P020201_add_l2": {
            "slice_type": "slice_type",
            "slice_id": "slice_id",
            "noname": "CPs",
            "op": "op",
            "path": "path",
            "value": "value",
            "cluster_id": "cluster_id",
            "edge_point_id": "edge_point_id",
            "vlan_id": "vlan_id",
            "pair_cp_id": "pair_cp_id",
            "qos": "qos",
            "ingress_shaping_rate": "ingress_shaping_rate",
            "egress_shaping_rate": "egress_shaping_rate",
            "egress_queue_menu": "egress_queue_menu",
            "esi": "esi",
            "lacp_system_id": "lacp_system_id",
            "port_mode": "port_mode"
        },
        "P020201_add_l3": {
            "slice_type": "slice_type",
            "slice_id": "slice_id",
            "noname": "CPs",
            "op": "op",
            "path": "path",
            "value": "value",
            "cluster_id": "cluster_id",
            "edge_point_id": "edge_point_id",
            "vlan_id": "vlan_id",
            "mtu": "mtu",
            "qos": "qos",
            "ingress_shaping_rate": "ingress_shaping_rate",
            "egress_shaping_rate": "egress_shaping_rate",
            "egress_queue_menu": "egress_queue_menu",
            "ipv4_address": "ipv4_address",
            "ipv6_address": "ipv6_address",
            "ipv4_prefix": "ipv4_prefix",
            "ipv6_prefix": "ipv6_prefix",
            "bgp": "bgp",
            "bgp_role": "role",
            "bgp_neighbor_as": "neighbor_as",
            "bgp_neighbor_ipv4_address": "neighbor_ipv4_address",
            "bgp_neighbor_ipv6_address": "neighbor_ipv6_address",
            "static_routes": "static_routes",
            "static_routes_addr_type": "addr_type",
            "static_routes_address": "address",
            "static_routes_prefix": "prefix",
            "static_routes_next_hop": "next_hop",
            "vrrp": "vrrp",
            "vrrp_group_id": "group_id",
            "vrrp_role": "role",
            "vrrp_virtual_ipv4_address": "virtual_ipv4_address",
            "traffic_threshold": "traffic_threshold"
        },
        "P020201_delete": {
            "slice_type": "slice_type",
            "slice_id": "slice_id",
            "noname": "CPs",
            "op": "op",
            "path": "path"
        },
        "P020203": {
            "slice_type": "slice_type",
            "slice_id": "slice_id",
            "cp_id": "cp_id",
            "action": "action",
            "update_option": "update_option",
            "qos_update_option": "qos_update_option",
            "ingress_shaping_rate": "ingress_shaping_rate",
            "egress_shaping_rate": "egress_shaping_rate",
            "egress_queue_menu": "egress_queue_menu"
        }
    }
}
